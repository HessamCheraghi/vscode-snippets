{
	"Print to console": {
		"prefix": "cl",
		"body": [
			"console.log(${1:/* thing you want to see! */});",
			"$0"
		],
		"description": "Log output to console"
	},
	"Advance Debugging Technique": {
		"prefix": "cd",
		"body": [
			"console.log($TM_LINE_NUMBER);",
			"$0"
		],
		"description": "Log to console which lines where executed"
	},
	"Create a Function": {
		"prefix": "fn",
		"body": [
			"function ${1:procedure}(${2:parameter}) {",
			"\t$0",
			"}",
		],
		"description": "Create a named function using function declaration syntax"
	},
	"Create an Arrow Function": {
		"prefix": "af",
		"body": [
			"const ${1:procedure} = (${2:parameter}) => {",
			"\t$0",
			"}",
		],
		"description": "Create an arrow function"
	},
	"React useState Hook": {
		"prefix": "rus",
		"body": [
			"const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = React.useState(${2:\"initialState\"});",
			"$0"
		],
		"description": "Create a useState hook"
	},
	"React useEffect Hook": {
		"prefix": "rue",
		"body": [
			"React.useEffect(() => {",
			"\t$1",
			"\treturn () => {};",
			"}, [$2]);",
			"$0"
		],
		"description": "Create a useEffect hook"
	},
	"Import React": {
		"prefix": "imr",
		"body": [
			"import React from \"react\";",
			"$0"
		],
		"description": "Import React"
	},
	"React Functional Component": {
		"prefix": "rfc",
		"body": [
			"export default function $TM_FILENAME_BASE() {",
			"\treturn <div>$TM_FILENAME_BASE Works!</div>;",
			"}",
			"$0"
		],
		"description": "Create a React functional component"
	},
	"Next Functional Component": {
		"prefix": "nfc",
		"body": [
			"export default function ${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}() {",
			"\treturn <div>${TM_FILENAME_BASE/(.*)/${1:/capitalize}/} Works!</div>;",
			"}",
			"$0"
		],
		"description": "Creates a Next.js page component"
	},
}
